# СТРОКИ
# 1 Конкатенация (сложение)
S1 = 'spam'
S2 = 'eggs'
print(S1 + S2)
# 2 Дублирование строки
print('spam' * 3)
# 3 Длина строки (функция len)
print(len('spam'))
# 4 Извлечение среза
# Оператор извлечения среза: [X:Y]. X – начало среза, а Y – окончание;
# символ с номером Y в срез не входит. По умолчанию первый индекс равен 0, а второй - длине строки.
S = "spameggs"
print(S[3:5])
# 5 Доступ по индексу
S = 'spam'
print(S[0])
# СПИСКИ
# 1 Добавляет элемент в конец списка
x = [3, 6, 9]
x.append(150)
print(x)
# 2 Расширяет список добавляя в конец все элементы списка
x = [12, 15, 18]
x.extend([3, 6, 9])
print(x)
# 3 Вставляет на i-ый элемент значение x
x = [12, 15, 18]
x.insert(0, 3)
print(x)
# 4 Удаляет первый элемент в списке, имеющий значение x. ValueError, если такого элемента не существует
x = [2, (0, 3), 12, 'foo', 15, 100, 18, 'foo']
x.remove('foo')
print(x)
#  5 Удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент
x = [2, 0, 3, 12, 'foo', 15, 100, 18]
x.pop(4)
print(x)
# СЛОВАРИ
# 1 очищает словарь
x = {'one': 0, 'two': 20, 'three': 3, 'four': 4}
x.clear()
print(x)
# 2 возвращает копию словаря
x = {'one': 0, 'two': 20, 'three': 3, 'four': 4}
y = x.copy()
x['one'] = 100
del x['three']
print(x)
print(y)
# 3 удаляет ключ и возвращает значение. Если ключа нет, возвращает default (по умолчанию бросает исключение).
x = {'one': 0, 'two': 20, 'three': 3, 'four': 4}
x.pop('three')
print(x)
# 4 удаляет и возвращает пару (ключ, значение). Если словарь пуст, бросает исключение KeyError. Помните, что словари неупорядочены.
x = {'one': 0, 'two': 20, 'three': 3, 'four': 4}
x.popitem()
print(x)
# 5 обновляет словарь, добавляя пары (ключ, значение) из other. Существующие ключи перезаписываются. Возвращает None (не новый словарь!).
x = {'yellow': 0, 'red': 2}
x.update(red=1, blue=2)
print(x)
# КОРТЕЖИ
# 1 Измерить размер (в картеже всегда меньше чем в строках)
a = (1, 2, 3, 4, 5, 6)
b = [1, 2, 3, 4, 5, 6]
print(a.__sizeof__())
print(b.__sizeof__())
# 2 сосдание пустого кортежа с помощью tuple()
a = tuple()
print(a)
# 3 определения длины кортежа
a = (1, 2, 3, 5, 4)
print(len(a))
# 4 используемый для получения индекса конкретного элемента в кортеже
p_tup = ("Лондон", "Пекин", 44, True)
print(p_tup.index("Лондон"))
# 5 возвращает общую сумму чисел внутри кортежа.
lucky_numbers = (5, 55, 4, 3, 101, 42)
print(sum(lucky_numbers))
# ФАЙЛЫ
# 1  читающий весь файл целиком
F = open("Run.py")
print(F.read())
# 2 write() используется для записи в файлы Python, открытые в режиме записи.
f = open('xyz.txt', 'w')
print(f.write('Hello \n World'))
# 3 close - закрывает файл
F = open("Run.py")
print(F.close())
# 4 .readline() - построчное чтение файла
f.seek(0,0)
print(f.readline())
# 5 open() - открывает файл на компьютере
f=open('123.txt','w')